{"version":3,"file":"static/js/457.a7ddf77d.chunk.js","mappings":"2NACA,EAAuB,sBAAvB,EAAqD,uB,SCKtC,SAASA,IACrB,IAAOC,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAOA,OALAC,EAAAA,EAAAA,YAAU,YACPC,EAAAA,EAAAA,IAAkBN,GAASO,MAAK,SAAAC,GAAI,OACjCJ,EAAWI,EAAKC,QADiB,GAEtC,GAAE,CAACT,KAGD,eAAIU,UAAWC,EAAf,SACIR,GAAWA,EAAQS,OACjBT,EAAQU,KAAI,SAAAC,GAAM,OACf,gBAAIJ,UAAWC,EAAf,WACG,qCAAaG,EAAOC,WACpB,uBAAID,EAAOE,YAFoBF,EAAOG,GAD1B,KAOlB,sEAIX,C,8MC7BKC,EAAW,+BACXC,EAAS,mCAEFC,EAAU,kCAAhB,SAEQC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,CAAC,EAA1D,SAC2BC,MAAMF,EAAKC,GADtC,YACUE,EADV,QAEoBC,GAFpB,iCAGgBD,EAASE,OAHzB,gDAIUC,QAAQC,OAAO,IAAIC,MAAM,cAJnC,2GAOO,SAASC,EAAcC,GAC1B,OAAOX,EAAuB,GAAD,OAC1BH,EAD0B,uCACaC,EADb,iBAC4Ba,GAE5D,CAEM,SAASC,EAAsBhB,GAClC,OAAOI,EAAuB,GAAD,OAAIH,EAAJ,kBAAsBD,EAAtB,oBAAoCE,GACpE,CAEM,SAASe,EAAkBjB,GAC9B,OAAOI,EAAuB,GAAD,OAAIH,EAAJ,kBAAsBD,EAAtB,4BAA4CE,EAA5C,mBAChC,CAEM,SAASb,EAAkBW,GAC9B,OAAOI,EAAuB,GAAD,OAAIH,EAAJ,kBAAsBD,EAAtB,4BAA4CE,EAA5C,mBAChC,CAEM,SAASgB,EAAiBC,GAAkB,IAAXJ,EAAU,uDAAH,EAC3C,OAAOX,EAAuB,GAAD,OAAIH,EAAJ,iCAAqCC,EAArC,iCAAoEiB,EAApE,qCAAsGJ,GACtI,C,sBChCD,SAASK,EAAmBC,EAAKC,EAASV,EAAQW,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAON,EAAII,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAjB,EAAOiB,EAET,CAEIF,EAAKG,KACPR,EAAQM,GAERjB,QAAQW,QAAQM,GAAOtC,KAAKiC,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIzB,SAAQ,SAAUW,EAASV,GACpC,IAAIS,EAAMW,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMK,GACbR,EAAmBC,EAAKC,EAASV,EAAQW,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOc,GACdlB,EAAmBC,EAAKC,EAASV,EAAQW,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.js","services/moviesApi.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__okdpy\",\"items\":\"Reviews_items__vq73B\"};","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMovieReviews } from \"../../services/moviesApi\";\nimport styles from \"./Reviews.module.css\";\n\n\nexport default function Reviews(){\n   const {movieId} = useParams();\n   const [reviews, setReviews] = useState(null);\n\n   useEffect(() => {\n      fetchMovieReviews(movieId).then(date => \n         setReviews(date.results));\n   }, [movieId]);\n\n   return (\n      <ul className={styles.list}>\n         {reviews && reviews.length ? (\n            reviews.map(review => (\n               <li className={styles.items} key={review.id}>\n                  <h2>Author: {review.author}</h2>\n                  <p>{review.content}</p>\n               </li>\n            ))\n         ) : (\n            <li>We don`t have any reviews for this movie</li>\n         )} \n      </ul>\n   );\n};\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst MY_KEY = \"8b583155d58a646685ec9258b19767f3\";\n\nexport const URL_IMG = 'https://image.tmdb.org/t/p/w500';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n    const response = await fetch(url, config);\n    return response.ok\n        ? await response.json()\n        : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrending(page) {\n    return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${MY_KEY}&page=${page}`\n    );\n}\n\nexport function fetchMovieDetailsById(id) {\n    return fetchWithErrorHandling(`${BASE_URL}/movie/${id}?api_key=${MY_KEY}`);\n}\n\nexport function fetchMovieCredits(id) {\n    return fetchWithErrorHandling(`${BASE_URL}/movie/${id}/credits?api_key=${MY_KEY}&language=en-US`);\n}\n\nexport function fetchMovieReviews(id) {\n    return fetchWithErrorHandling(`${BASE_URL}/movie/${id}/reviews?api_key=${MY_KEY}&language=en-US`);\n}\n\nexport function fetchSearchMovie(query, page = 1) {\n    return fetchWithErrorHandling(`${BASE_URL}/search/movie?api_key=${MY_KEY}&language=en-US&query=${query}&include_adult=false&page=${page}`);\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","fetchMovieReviews","then","date","results","className","styles","length","map","review","author","content","id","BASE_URL","MY_KEY","URL_IMG","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrending","page","fetchMovieDetailsById","fetchMovieCredits","fetchSearchMovie","query","asyncGeneratorStep","gen","resolve","_next","_throw","key","arg","info","value","error","done","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}